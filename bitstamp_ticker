#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include "secrets.h" // WiFi Configuration (WiFi name and Password)

// Replace with your WiFi credentials
const char* ssid = SECRET_SSID;
const char* password = SECRET_WIFI_PASSWORD;

// Bitstamp API endpoint IP address
const char* host = "www.bitstamp.net";
const int port = 443;

// Create an instance of WiFiClientSecure
WiFiClientSecure client;

void setup() {
  Serial.begin(9600);
  delay(10);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
  
  // Set SSL/TLS options to skip certificate verification
  client.setInsecure();
  
  // Connect to Bitstamp API
  if (!client.connect(host, port)) {
    Serial.println("Connection failed");
    return;
  }
  
  // Send request to Bitstamp API
  client.println("GET /api/v2/ticker/btceur HTTP/1.1");
  client.println("Host: www.bitstamp.net");
  client.println("Connection: close");
  client.println();
}

void loop() {
  // Read response from Bitstamp API
  while (client.connected() && !client.available()) {
    delay(1);
  }
  String response;
  while (client.available()) {
    char c = client.read();
    response += c;
  }
  
  // Disconnect from Bitstamp API
  client.stop();
  
  // Extract "last" value from response
  int index = response.indexOf("\"last\": \"");
  if (index != -1) {
    String lastValue = response.substring(index + 9);
    index = lastValue.indexOf("\"");
    if (index != -1) {
      lastValue = lastValue.substring(0, index);
      Serial.print("Last Value (EUR): ");
      Serial.println(lastValue);
    } else {
      Serial.println("Failed to extract 'last' value from response");
    }
  } else {
    Serial.println("Failed to find 'last' value in response");
  }
  
  // Wait for 40 seconds
  delay(40000);
}
